type Comment {
  id: ID!
  activityId: String
  author: User @relation(name: "WROTE", direction: "IN")
  content: String!
  contentExcerpt: String
  post: Post @relation(name: "COMMENTS", direction: "OUT")
  createdAt: String
  updatedAt: String
  deleted: Boolean
  disabled: Boolean
  # Wolle reviewedByModerator: User
    # @cypher(
    #   statement: """
    #   MATCH (this)<-[:FLAGGED]-(caseFolder:CaseFolder)<-[review:REVIEWED]-(moderator:User)
    #   RETURN moderator
    #   ORDER BY caseFolder.updatedAt ASC, review.updatedAt ASC
    #   LIMIT 1
    #   """
    # )
  reviewedByModerator: User
    # Wolle @cypher(
    #   statement: """
    #   MATCH (this)<-[:FLAGGED]-(caseFolder:CaseFolder)<-[review:REVIEWED]-(moderators:User)
    #   WITH caseFolder, review, moderators
    #   ORDER BY caseFolder.updatedAt ASC, review.updatedAt ASC
    #   WITH collect(moderators) AS orderedModerators
    #   WITH orderedModerators[0] AS moderator
    #   RETURN moderator
    #   """
    # )
}

type Mutation {
  CreateComment(
    id: ID
    postId: ID!
    content: String!
    contentExcerpt: String
  ): Comment
  UpdateComment(
    id: ID!
    content: String!
    contentExcerpt: String
  ): Comment
  DeleteComment(id: ID!): Comment
}
