type FILED {
  createdAt: String!
  reasonCategory: ReasonCategory!
  reasonDescription: String!
  report: Report  @cypher(
    statement: "MATCH (resource)<-[:BELONGS_TO]-(report:Report)<-[:FILED]-(:User) WHERE NOT resource.deleted = true AND NOT resource.disabled = true RETURN report"
  )

  submitter: User
    # @cypher(statement: "MATCH (resource)<-[:FILED]-(user:User) RETURN user")
  type: String
    # @cypher(statement: "MATCH (resource)<-[:FILED]-(user:User) RETURN labels(resource)[0]")
  user: User
  post: Post
  comment: Comment
}

# this list equals the strings of an array in file "webapp/constants/modals.js"
enum ReasonCategory {
  other
  discrimination_etc
  pornographic_content_links
  glorific_trivia_of_cruel_inhuman_acts
  doxing
  intentional_intimidation_stalking_persecution
  advert_products_services_commercial
  criminal_behavior_violation_german_law
}

# not yet supported
# union ReportResource = User | Post | Comment

enum ReportOrdering {
  createdAt_asc
  createdAt_desc
}

type Query {
  reports(orderBy: ReportOrdering): [FILED]
}

type Mutation {
  fileReport(resourceId: ID!, reasonCategory: ReasonCategory!, reasonDescription: String!): FILED
}
